{"version":3,"file":"deferred-CdxJuQ03.mjs","sources":["../../../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../../../../src/routes/deferred.tsx?tsr-split=component","../../../../node_modules/@tanstack/react-query/build/modern/useSuspenseQuery.js"],"sourcesContent":null,"names":["QueryObserver","Subscribable","constructor","client","options","super","this","selectError","currentThenable","pendingThenable","experimental_prefetchInRender","reject","Error","bindMethods","setOptions","currentQuery","currentQueryInitialState","currentResult","currentResultState","currentResultOptions","selectFn","selectResult","lastQueryWithDefinedData","staleTimeoutId","refetchIntervalId","currentRefetchInterval","trackedProps","Set","refetch","bind","onSubscribe","listeners","size","addObserver","shouldFetchOnMount","executeFetch","updateResult","updateTimers","onUnsubscribe","hasListeners","destroy","shouldFetchOnReconnect","shouldFetchOn","refetchOnReconnect","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearStaleTimeout","clearRefetchInterval","removeObserver","prevOptions","prevQuery","defaultQueryOptions","enabled","resolveEnabled","updateQuery","_defaulted","shallowEqualObjects","getQueryCache","notify","type","query","observer","mounted","shouldFetchOptionally","resolveStaleTime","staleTime","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","updateRefetchInterval","getOptimisticResult","build","result","createResult","optimisticResult","getCurrentResult","shouldAssignObserverCurrentProperties","state","trackResult","onPropTracked","Proxy","get","target","key","trackProp","Reflect","add","getCurrentQuery","fetch","fetchOptimistic","defaultedOptions","then","fetchOptions","cancelRefetch","promise","throwOnError","catch","noop","refetchInterval","nextInterval","clearTimeout","clearInterval","prevResult","prevResultState","prevResultOptions","queryInitialState","data","newState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","fetchState","fetchStatus","error","errorUpdatedAt","status","skipSelect","placeholderData","replaceData","select","Date","now","isFetching","isPending","isError","isLoading","hasData","nextResult","isSuccess","isInitialLoading","dataUpdatedAt","failureCount","fetchFailureCount","failureReason","fetchFailureReason","errorUpdateCount","isFetched","dataUpdateCount","isFetchedAfterMount","isRefetching","isLoadingError","isPaused","isRefetchError","isStale","isEnabled","finalizeThenableIfPossible","thenable","resolve","recreateThenable","pending","prevThenable","queryHash","value","reason","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","Object","keys","some","typedKey","has","shouldNotifyListeners","onQueryUpdate","notifyOptions","notifyManager","batch","forEach","listener","retryOnMount","shouldLoadOnMount","refetchOnMount","field","suspense","isStaleByTime","IsRestoringContext","React.createContext","Provider","QueryErrorResetBoundaryContext","isReset","clearReset","reset","createValue","defaultThrowOnError","_error","useBaseQuery","Observer","queryClient","isRestoring","React.useContext","errorResetBoundary","useQueryClient","getDefaultOptions","queries","_experimental_beforeQuery","clamp","Math","max","originalStaleTime","args","gcTime","ensureSuspenseTimers","ensurePreventErrorBoundaryRetry","React.useEffect","useClearResetErrorBoundary","React.useState","shouldSubscribe","subscribed","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","subscribe","batchCalls","shouldSuspend","shouldThrowError","getHasError","_experimental_afterQuery","DeferredQuery","deferredQuery","queryOptions","queryKey","queryFn","async","Promise","r","setTimeout","message","time","jsxs","children","jsx","toISOString","SplitComponent","count","setCount","useState","className","Suspense","fallback","onClick"],"mappings":"","x_google_ignoreList":[0,1,2,3,4,5,7]}